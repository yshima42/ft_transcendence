version: '3.8'
services:
  frontend:
    # image: dev-frontend-slim
    build: ./frontend
    ports:
      - 5173:5173
    # restart: always
    volumes:
    - type: bind
      source: "./frontend"
      target: "/usr/src/app"
    depends_on:
      - backend
    networks:
      - front-tier

  backend:
    # image: dev-backend-slim
    build: ./backend
    ports:
      - 3000:3000
    # restart: always
    volumes:
    - type: bind
      source: "./backend"
      target: "/usr/src/app"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - front-tier
      - back-tier

  database:
    image: postgres:14.4-alpine
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    # restart: always
    networks:
      - back-tier
    volumes:
      - database-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge

volumes:
  database-volume:
